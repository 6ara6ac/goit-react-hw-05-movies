{"version":3,"file":"static/js/784.d41e6565.chunk.js","mappings":"kPAGaA,EAAiBC,EAAAA,GAAAA,IAAH,4CAIdC,EAAqBD,EAAAA,GAAAA,IAAH,qEAMlBE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,yL,SC4CrB,EAlDoB,WAAM,IAAD,EACrB,GAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,GAAWC,EAAAA,EAAAA,OAIjBC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAaL,GAAIM,MAAK,gBAAEC,EAAF,EAAEA,KAAF,OAAYR,EAAQQ,EAApB,GACzB,GAAC,CAACP,IAGH,IAAMQ,EAAoEV,EAApEU,MAAOC,EAA6DX,EAA7DW,aAAcC,EAA+CZ,EAA/CY,SAAUC,EAAqCb,EAArCa,YAAaC,EAAwBd,EAAxBc,OAAQC,EAAgBf,EAAhBe,aACpDC,EAAU,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAQG,KAAI,gBAAEC,EAAF,EAAEA,KAAF,OAAYC,KAAKC,UAAUF,EAA3B,IAAkCG,OAGjE,OAAO,UAAC3B,EAAD,YACP,SAACG,EAAD,CAAUyB,IAAI,UAAAlB,EAASmB,aAAT,eAAgBC,OAAQ,UAAtC,2BACA,0BACA,UAAC5B,EAAD,YACA,gBAAK6B,IACe,OAAhBZ,EACEa,EAAAA,GACFC,EAAAA,GAAad,EAAae,IAAI,GAAGC,MAAO,OAC5C,4BACA,0BAAKnB,EAAL,KAAY,uCAAQK,QAAR,IAAQA,OAAR,EAAQA,EAAce,MAAM,EAAG,GAA/B,WACZ,wCAAgBC,KAAKC,OAAoB,GAAbrB,GAAiBsB,QAAQ,GAAI,QACzD,sCACA,uBAAIrB,KACJ,oCACA,uBAAII,aAIJ,4BACA,6CACA,2BACA,yBACA,SAAC,KAAD,CAAMM,GAAG,OAAT,qBAEA,yBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGA,SAAC,KAAD,SAGH,C,+LCrDKY,EAAQ,mCAEDC,EAAgB,mCAAG,sGACNC,EAAAA,EAAAA,IAAA,kEAAqEF,IAD/D,uBACrBzB,EADqB,EACrBA,KADqB,kBAErBA,GAFqB,2CAAH,qDAKhBF,EAAY,mCAAG,WAAOL,GAAP,iFACbkC,EAAAA,EAAAA,IAAA,6CAAgDlC,EAAhD,oBAA8DgC,IADjD,mFAAH,sDAIZG,EAAY,mCAAG,WAAOC,GAAP,iFACbF,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,iCAA+FI,EAA/F,oCADa,mFAAH,sDAKZC,EAAU,mCAAG,WAAOrC,GAAP,iFACXkC,EAAAA,EAAAA,IAAA,6CAAgDlC,EAAhD,4BAAsEgC,EAAtE,wBADW,mFAAH,sDAKVM,EAAU,mCAAG,WAAOtC,GAAP,iFACXkC,EAAAA,EAAAA,IAAA,6CAAgDlC,EAAhD,4BAAsEgC,EAAtE,wBADW,mFAAH,qD,uGCvBhB,IAAMP,EAAa,kCACbc,EAAa,wEACbf,EAAc,qC","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetais.js","services/API.js","static/Base_url.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\"\n\nexport const MovieContainer = styled.div`\n\npadding: 0 50px;\n`\nexport const MovieInfoContainer = styled.div`\ndisplay:flex;\ngap: 20px;\npadding: 20px 0;\n`\n\nexport const BackLink = styled(Link)`\npadding: 2px 16px;\nborder-radius: 4px;\ntext-decoration: none;\ncolor: black;\nfont-weight: 500;\n\n&:hover{\ncolor: white;\n  background-color: orangered;\n}\n`\n","import { useEffect, useState } from \"react\"\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\"\nimport { getMovieInfo } from \"services/API\"\nimport { FAKE_POSTER, POSTER_URL } from \"static/Base_url\"\nimport { MovieContainer, MovieInfoContainer, BackLink } from './MovieDetails.styled'\n\n\nconst MovieDetais = () =>{\n    const [info, setInfo] = useState([])\n    const { id } = useParams()\n\n    const location = useLocation()\n\n    \n\n    useEffect(()=> {\n        getMovieInfo(id).then(({data}) => setInfo(data))\n    },[id])\n    \n\n    const{title, vote_average, overview, poster_path, genres, release_date} = info;\n    const genresList = genres?.map(({name}) => JSON.stringify(name)).join()\n\n\n    return <MovieContainer>\n    <BackLink to={location.state?.from || '/movies'}>back to list</BackLink>\n    <div>\n    <MovieInfoContainer>\n    <img src={\n        poster_path === null || undefined \n        ? FAKE_POSTER : \n        POSTER_URL + poster_path} alt='' width={500}/>\n    <div>\n    <h3>{title} <span>({release_date?.slice(0, 4)})</span></h3>\n    <p>User score: {Math.fround(vote_average*10).toFixed(0)+ '%'}</p>\n    <h4>Overview</h4>\n    <p>{overview}</p>\n    <h4>Genres</h4>\n    <p>{genresList}</p>\n    </div>\n    </MovieInfoContainer>\n    </div>\n    <div>\n    <h4>Additional info</h4>\n    <ul>\n    <li>\n    <Link to=\"cast\">Cast</Link>\n    </li>\n    <li>\n    <Link to=\"reviews\">Reviews</Link>\n    </li>\n    </ul>\n    <Outlet/>\n    </div>\n    </MovieContainer>\n}\n\nexport default MovieDetais","import axios from \"axios\"\n\nconst API_KEY='1aec7afb2309fd39902ffda599461df1'\n\nexport const getPopularMovies = async () => {\n   const { data } = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`)\n    return data;\n}\n\nexport const getMovieInfo = async (id) => {\n  return await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`)\n}\n\nexport const searchMovies = async (query) =>{\n  return await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false\n  `)\n}\n\nexport const getCredits = async (id) =>{\n  return await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US\n  `)\n}\n\nexport const getReviews = async (id) =>{\n  return await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US\n  `)\n}","export const POSTER_URL = 'https://image.tmdb.org/t/p/w200';\nexport const FAKE_ACTOR = 'https://i.ibb.co/SQqpC1z/e2cf2d0389c3ccd536c49889e19d2463f5c25e0c.jpg'\nexport const FAKE_POSTER = 'https://i.ibb.co/c6XCRBd/crying.jpg';"],"names":["MovieContainer","styled","MovieInfoContainer","BackLink","Link","useState","info","setInfo","id","useParams","location","useLocation","useEffect","getMovieInfo","then","data","title","vote_average","overview","poster_path","genres","release_date","genresList","map","name","JSON","stringify","join","to","state","from","src","FAKE_POSTER","POSTER_URL","alt","width","slice","Math","fround","toFixed","API_KEY","getPopularMovies","axios","searchMovies","query","getCredits","getReviews","FAKE_ACTOR"],"sourceRoot":""}